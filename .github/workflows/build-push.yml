name: Build & Push

"on":
  workflow_run:
    workflows: ["Security Scan"]
    types: [completed]
  workflow_dispatch:
    inputs:
      version:
        description: "SemVer ohne 'v' (z.B. 1.2.3) â€“ optional"
        required: false
        type: string

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/${{ github.repository }}
  OWNER: ${{ github.repository_owner }}
  REPO: ${{ github.event.repository.name }}
  TAG: latest

jobs:
  build:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (mit Tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Load pinned versions (optional)
        id: vers
        shell: bash
        run: |
          set -euo pipefail
          FILE="containers/asterisk/versions.env"
          {
            echo "args<<EOF"
            echo "OWNER=${{ env.OWNER }}"
            echo "REPO=${{ env.REPO }}"
            if [ -f "$FILE" ]; then
              # Kommentare/Leerzeilen raus
              sed -E '/^\s*($|#)/d' "$FILE"
            fi
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Resolve Version (Tag/Release/Manual)
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          VER_INPUT="${{ github.event.inputs.version || '' }}"
          VER="${VER_INPUT}"

          if [ -z "$VER" ] && [ "${GITHUB_REF_TYPE:-}" = "tag" ]; then
            VER="${GITHUB_REF_NAME#v}"
          fi

          if [ -z "$VER" ] && [ "${{ github.event_name }}" = "release" ]; then
            T="${{ github.event.release.tag_name }}"
            VER="${T#v}"
          fi

          if [ -z "$VER" ]; then
            echo "version=" >> "$GITHUB_OUTPUT"
            echo "extra_tags=" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          IFS='.' read -r MAJOR MINOR PATCH <<EOF
$VER
EOF

          {
            echo "${{ env.IMAGE }}:v${VER}"
            echo "${{ env.IMAGE }}:${VER}"
            echo "${{ env.IMAGE }}:${MAJOR}.${MINOR}"
            echo "${{ env.IMAGE }}:${MAJOR}"
          } > /tmp/extra_tags.txt

          echo "version=$VER" >> "$GITHUB_OUTPUT"
          echo "extra_tags=$(tr '\n' ',' < /tmp/extra_tags.txt | sed 's/,$//')" >> "$GITHUB_OUTPUT"
          echo "TAG=$VER" >> "$GITHUB_ENV"

      - name: Docker meta (branch/latest/sha)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short,prefix=sha-
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ github.ref_name }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: containers/${{ env.REPO }}
          file: containers/${{ env.REPO }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.ver.outputs.extra_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ steps.vers.outputs.args }}
          provenance: false
          sbom: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "Pushed tags:"
          printf '%s\n' "${{ steps.meta.outputs.tags }}" | tr ' ' '\n' | sed 's/^/- /'
          if [ -n "${{ steps.ver.outputs.extra_tags }}" ]; then
            echo "${{ steps.ver.outputs.extra_tags }}" | tr ',' '\n' | sed 's/^/- /'
          fi
